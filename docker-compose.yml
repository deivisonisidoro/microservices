services:
  db:
    image: postgres:13
    ports:
      - 5432:5432
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  test-db:
    image: postgres:13
    ports:
      - 5435:5432
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${TEST_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TEST_POSTGRES_DB}

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    depends_on:
      - db
      - kafka
    env_file:
      - ./api-gateway/.env.production

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
      target: production
    ports:
      - "3002:3002"
    depends_on:
      - db
      - kafka
    env_file:
      - ./notification-service/.env.production

  customers-service:
    build:
      context: ./customers-service
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:3001"
    depends_on:
      - db
      - kafka
    env_file:
      - ./customers-service/.env.production

volumes:
  pgdata: {}
